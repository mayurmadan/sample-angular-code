name: AWS cred test Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-aws-credentials:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials for particular region
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1  # Specify your AWS region
          role-to-assume: arn:aws:iam::975050106552:role/test-OTDC-github-workflow  # Specify your IAM Role ARN for OIDC
          role-session-name: TestAwsCred

      - name: Test AWS CLI
        run: |
          aws sts get-caller-identity
          aws s3 ls  # Example command to list S3 buckets as a test
      #- name: Create script for deployment #this way we can add scipt in github workflow
      #  run: |
      #    cat <<EOL > connection.sh
      #    ip addr
      #    curl ifconfig.me
      #        if echo "quit" | telnet 54.146.55.79 22 /dev/null 2>&1 | grep "Connected"; then
      #           echo "Connection successful to test server."
      #        else
      #           echo "Connection failed to test server."
      #        fi
      #    EOL
      #    echo "check connection to target server for ssh"
      #    nc -z -v -w 3 54.146.55.79 22
      #- name: Run bash script
      #  run: |              
      #        ls -lrth
      #        echo "getting the detail for runner"
      #        pwd  
      #        ls -a ~
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '8.x'
      - name: Install dependencies
        run: | 
              npm install -g npm@6.13.4
              npm install -g @angular/cli@6.0.3
              npm install
              ng build
              ls -larth
              aws s3 ls
      - name: backup and deployment
        env: 
           S3_BUCKET_NAME: ${{vars.APP_UI_S3_BUCKET}}
           CLOUDFRONT_DIST_ID: ${{vars.APP_UI_CLOUDFRONT_DIST_ID}}
        run: |
              export DATE=`date +"%Y-%m-%d-%H:%M"`
              #Deleted previously created all backups from 'previous.BACKUP' folder
              aws s3 rm --recursive s3://$S3_BUCKET_NAME/previous.BACKUP/ --recursive --exclude ""
              #create the new backup in previous.BACKUP folder
              aws s3 mv s3://$S3_BUCKET_NAME/ s3://$S3_BUCKET_NAME/previous.BACKUP/backup.$DATE --recursive  --include "*" --exclude "*.BACKUP" 
              #copy build to s3
              #aws s3 sync dist/my-pizza-order-online/ s3://$S3_BUCKET_NAME --exclude ".gitlab-ci.yml"  --exclude "README.md"
              aws s3 sync dist/my-pizza-order-online/ s3://$S3_BUCKET_NAME

              #clear cloudfront cache
              #aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DIST_ID --paths "/*"
               
          
              
              
